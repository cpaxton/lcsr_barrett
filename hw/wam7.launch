<launch>

  <arg name="log_level" default="info" doc="(int) Set the Orocos log level (0:none) (4:warn) (5:info) (6:debug)"/>
  <arg name="debug" default="false" doc="(bool) Launch in debug mode"/>
  <arg name="gui" default="true" doc="(bool) Launch the gazebo GUI"/>
  <arg name="planning" default="false" doc="(bool) Launch the motion planing pipeline"/>
  <arg name="empty" default="false" doc="(bool) Launch the robot with an open palm"/>
  <arg name="hand" default="false" doc="(bool) Launch the robot with a hand"/>
  <arg name="ball" default="false" doc="(bool) Launch the robot with a ball"/>
  <arg name="bumblebee" default="false" doc="(bool) Launch the robot with a bumblebee"/>
  <arg name="initial_group" default="joint_control" doc="(string) Initial active controller group"/>
  <arg name="deadman" default="false" doc="(bool) If true, require a deadman input to send anything other than gravity comp."/>
  <arg name="dash" default="true" doc="(bool) If true, display the barrett dashboard."/>

  <include file="$(find rtt_ros)/launch/deployer.launch">
    <arg name="NAME" value="barrett"/>
    <arg name="DEPLOYER_ARGS" value="-s $(find lcsr_barrett)/hw/wam7.ops"/>
    <arg name="LOG_LEVEL" value="$(arg log_level)"/>
    <arg name="DEBUG" value="$(arg debug)"/>
  </include>

  <param name="robot_description" 
    command="$(find xacro)/xacro.py '$(find lcsr_barrett)/hw/wam7.urdf.xacro' prefix:=wam  hand:=$(arg hand) ball:=$(arg ball) bumblebee:=$(arg bumblebee)" />

  <node pkg="robot_state_publisher" type="robot_state_publisher"
    name="wam_state_publisher">
    <param name="publish_frequency" value="50"/>
    <remap from="joint_states" to="wam_joint_states"/>
  </node>

  <group ns="barrett">
    <group ns="barrett_manager">

      <node if="$(arg dash)" pkg="rqt_barrett" type="rqt_barrett" name="rqt_barrett">
        <remap from="robot_description" to="/robot_description"/>
        <remap from="joint_states" to="wam/joint_states"/>
      </node>

      <node pkg="joint_state_publisher" type="joint_state_publisher" name="$(anon joint_state_publisher)">
        <rosparam param="source_list" subst_value="true">
          ["wam/joint_states", "hand/joint_states"]
        </rosparam>
        <param name="rate" value="50"/>
        <remap from="robot_description" to="/robot_description"/>
      </node>
      <node pkg="robot_state_publisher" type="robot_state_publisher" name="$(anon robot_state_publisher)">
        <param name="publish_frequency" value="50"/>
      </node>

      <rosparam subst_value="true">
        bus_id: 0
        config_path: $(find lcsr_barrett)/config/libbarrett.conf
        
        # Auto-configuration
        auto_configure_wam: true
        auto_configure_hand: $(arg hand)
        wam_dof: 7
        wam_urdf_prefix: wam

        # WAM Parameters
        wam:
          home_position: [0.0, -1.58153, 0.0, 3.1415, 0.0, -1.5708, 1.5708]
          home_resolver_offset: [0.214757, -1.75027, 0.734777, -1.60301, 1.80856, 1.20878, 0.291456]

          velocity_smoothing_factor: 0.98
          velocity_cutoff: [10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 1.0]
          torque_scales: [1.4, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
      </rosparam>

      <rosparam if="$(arg hand)" subst_value="true">
        hand_urdf_prefix: wam/hand
      </rosparam>
    </group>

    <!-- RTT Component parameters -->
    <include file="$(find lcsr_barrett)/hw/orocos_component_params.launch">
      <arg name="ee_empty" value="$(arg empty)"/>
      <arg name="ee_ball" value="$(arg ball)"/>
      <arg name="ee_bumblebee" value="$(arg bumblebee)"/>
      <arg name="ee_hand" value="$(arg hand)"/>
    </include>
    
    <rosparam ns="effort_sum" subst_value="true">
      dim: 7
      require_heartbeat: $(arg deadman)
      heartbeat_max_period: 0.075
    </rosparam>
  </group>

  <!-- deadman safety control, to be used with a wiimote -->
  <!-- trigger is momentary deadman, zombie mode is the 3-button sequence: minus, home, plus -->
  <node if="$(arg deadman)" pkg="lcsr_controllers" type="heartbeat_mux.py" name="heartbeat_mux" output="screen">
    <remap from="heartbeats" to="/effort_sum/heartbeats"/>
    <rosparam>
      buttons: [3]
      zombie_sequence: [5,10,4]
    </rosparam>
  </node>

</launch>
