import("rtt_ros");
ros.import("lcsr_barrett");

/* Set up TF component */
import("rtt_tf")
loadComponent("tf","rtt_tf::RTT_TF")
tf.configure()
tf.start()

/* Create the conman scheme */
runScript(ros.find("lcsr_barrett")+"/hw/conman.ops");

/* Load barrett manager, 7-dof wam */
runScript(ros.find("lcsr_barrett")+"/ops/barrett_hw_manager.ops");
runScript(ros.find("lcsr_barrett")+"/ops/wam7.ops");
load_effort_sum("");

/* Load controllers */
runScript(ros.find("lcsr_barrett")+"/ops/controllers.ops");
load_controllers("");
ik.conman_hook.setDesiredMinPeriod(0.01);

if(barrett_manager.auto_configure_hand) then {
  /* Connect to inverse dynamics controller */
  connect("barrett_manager.hand.center_of_mass_out", "inverse_dynamics.end_effector_masses_in", ConnPolicy());
}

/* setpoint */
loadComponent("joint_setpoint","lcsr_controllers::JointSetpoint");
connect("barrett_manager.wam.position_out", "joint_setpoint.joint_position_in", ConnPolicy());
connect("barrett_manager.wam.velocity_out", "joint_setpoint.joint_velocity_in", ConnPolicy());
connect(                                    "joint_setpoint.joint_position_out", "pid.joint_position_cmd_in", ConnPolicy());
connect(                                    "joint_setpoint.joint_velocity_out", "pid.joint_velocity_cmd_in", ConnPolicy());
joint_setpoint.configure();
addPeer("scheme","joint_setpoint");
scheme.addBlock("joint_setpoint");

loadComponent("traj_setpoint","lcsr_controllers::JointSetpoint");
connect("barrett_manager.wam.position_out", "traj_setpoint.joint_position_in", ConnPolicy());
connect("barrett_manager.wam.velocity_out", "traj_setpoint.joint_velocity_in", ConnPolicy());
connect(                                    "traj_setpoint.joint_position_out", "traj_rml.joint_position_cmd_in", ConnPolicy());
traj_setpoint.configure();
addPeer("scheme","traj_setpoint");
scheme.addBlock("traj_setpoint");

/* Start the Scheme */
scheme.start();

/* Set of initially running blocks */
scheme.enableBlock("devices",true);
//scheme.enableBlock("joint_control",true);
scheme.enableBlock("ik_control",true);
//scheme.enableBlock("cart_imp_control",true);
